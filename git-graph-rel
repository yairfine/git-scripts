#!/bin/bash

# print a simplified graph of the relation between two references (branches/tags/commits)

if [ $# -eq 0 ]; then
    echo "Usage: git graph-rel <ref>.."
    exit
fi

# Prepare the git command with quoted wildcard patterns
patterns=()
for pattern in "$@"; do
  patterns+=("**/$pattern")
done

# Execute the git for-each-ref command with the patterns
refs=$(git for-each-ref --format="%(refname:short)" "${patterns[@]}")

# Loop through each argument and check it is a valid ref
for ref in $refs; do
    if ! git rev-parse --quiet --verify $ref &>/dev/null; then
        echo "'$ref' does not exist"
        exit
    fi
done

# --opctopus for getting LCA in case one ref is ancestor of the other
MERGE_BASE=$(git merge-base --octopus $refs)

STYLE=" %C(auto)%h%C(reset)%C(auto)%d%C(reset) %C(white)%s%C(reset)  %C(dim white)%an%C(reset) %n"

# print simplified graph
git log --graph --pretty=format:"$STYLE" --decorate --simplify-by-decoration --first-parent --topo-order $refs --not $MERGE_BASE~
