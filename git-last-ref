#!/usr/bin/env sh

# Find the last annotated commit while traversing the commit history of `<rev>`.  
# Note that if `<rev>` itself is annotated, it will be returned.  
# This script is roughly equivalent to `git rev-list -n 1 --simplify-by-decoration`, making it redundant.

if [ $# -eq 0 ]; then
    echo "Usage: git last-ref <rev>"
    exit
fi

COMMIT="$1"

if ! git rev-parse --quiet --verify $COMMIT &>/dev/null; then
    echo "'$COMMIT' does not exist"
    exit
fi

while [[ $(git for-each-ref --points-at $COMMIT) == "" ]]
do
    COMMIT="$COMMIT~"
done

LAST_REF=$(git for-each-ref --format='%(refname)' --count=1 --points-at $COMMIT)

echo $LAST_REF
